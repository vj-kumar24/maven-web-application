def sendSlackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  //This is the condition which we are checking weather buildStatus is SUCCESSFULL or not.
 //This line updated to show the Eclipse with GitHub demo
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"
  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    colorName = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    colorName = 'GREEN'
    colorCode = '#00FF00'
  } else {
    colorName = 'RED'
    colorCode = '#FF0000'
  }

  // Calling the slackSend function to Send notifications.
  slackSend (color: colorCode, message: summary)
}

node{
    
def mavenHome = tool name: "maven-3.9.6"   //mavenHome is not mandatory to given whatever you give but same name in stage calling

echo "The Node name is: ${env.NODE_NAME}"
echo "The Job name is: ${env.JOB_NAME}"
echo "The Build Number is: ${env.BUILD_NUMBER}"

try{
sendSlackNotifications("STARTED")
    
stage('CheckoutCode'){
    git branch: 'development', credentialsId: 'cc9c40a8-6346-4c0e-917c-705a4acb5bf5', url: 'https://github.com/vj-kumar24/maven-web-application.git'
}//stage closing

stage('Build'){
    sh "$mavenHome/bin/mvn clean package"
}//stage closing

/*
stage('SonarQubeReport'){
sh "$mavenHome/bin/mvn sonar:sonar"
}

stage('upload artifact into nexus'){
sh "$mavenHome/bin/mvn deploy"
}

stage('DeploayAppintoTomcatServer'){
}
*/

}//try closing
catch(e){
currentBuild.result = "FAILURE"
}
finally{
sendSlackNotifications(currentBuild.result)
}
}//node closing
